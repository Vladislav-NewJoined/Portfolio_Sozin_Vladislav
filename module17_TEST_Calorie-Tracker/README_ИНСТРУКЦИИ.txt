Руководство по использованию проекта

ПРОЕКТ НАПИСАН НА ЯЗЫКЕ: JAVA.

Введение
Это руководство содержит пошаговые инструкции для работы с проектом, который использует встроенную базу данных H2 и консоль H2 Console для управления данными. Проект позволяет отслеживать потребление калорий пользователями, генерировать отчёты и экспортировать данные в файлы Excel и текстовые файлы.

Примечание:
В данном проекте вместо использования инструмента Postman была выбрана встроенная база данных H2 с консолью H2 Console. Это решение обусловлено следующими причинами:
1.	Ограничения Postman: В текущих условиях доступ к Postman может быть ограничен (например, из-за санкционных политик или необходимости устанавливать платную версию). Это делает его менее удобным для использования в данном проекте.
2.	Преимущества H2 Console: Встроенная база данных H2 предоставляет удобную консоль для управления данными и выполнения SQL-запросов. Она не требует дополнительных лицензий и полностью интегрирована с проектом.
3.	Гибкость и доступность: H2 Console позволяет работать с базой данных непосредственно из браузера, что упрощает отладку и тестирование.
Примечание: Я владею инструментом Postman и готов использовать его в разработке, если это будет необходимо или предпочтительно со стороны проекта или команды.
Для подключения к базе данных H2 используйте следующие параметры:
•	Saved Settings: Generic H2 (Embedded)
•	Setting Name: Generic H2 (Embedded)
•	Driver Class: org.h2.Driver
•	JDBC URL: jdbc:h2:file:./calorieTrackerDB
•	User Name: sa
•	Password: (оставьте поле пустым, пароль не требуется)
После запуска проекта доступ к базе данных осуществляется через веб-страницу: http://localhost:8080/h2-console. Это позволяет выполнять SQL-запросы, такие как
________________________________________
Подготовка к работе
1.	Запуск проекта:
•	Откройте проект в IntelliJ IDEA или другой IDE.
•	Найдите и запустите класс Application в пакете src/main/java/org/example.
•	Дождитесь появления в консоли сообщения (или лога):
code
main] org.example.Application : Started Application
2.	Доступ к базе данных:
•	Откройте в браузере веб-страницу: http://localhost:8080/h2-console.
•	Введите следующие данные для подключения:
•	Saved Settings: Generic H2 (Embedded)
•	Setting Name: Generic H2 (Embedded)
•	Driver Class: org.h2.Driver
•	JDBC URL: jdbc:h2:file:./calorieTrackerDB
•	User Name: sa
•	Password: (оставьте поле пустым, пароль не требуется)
•	Нажмите кнопку Connect.
________________________________________
Работа с базой данных
1.	Проверка таблицы:
•	Убедитесь, что таблица ПОЛЬЗОВАТЕЛИ создана и отображается в вертикальном меню слева.
•	Выполните SQL-запрос для просмотра содержимого таблицы:
sql
SELECT * FROM "ПОЛЬЗОВАТЕЛИ";
•	Нажмите кнопку Run или используйте сочетание клавиш Ctrl+Enter. В таблице должна быть одна тестовая строка с данными о пользователе и блюде.
2.	Экспорт данных в Excel:
•	Перейдите по адресу: http://localhost:8080/export/excel.
•	Убедитесь, что появилась надпись: Файл успешно экспортирован: Пользователи.xlsx.
•	Файл Пользователи.xlsx будет сохранён в корневой папке проекта. Откройте его для просмотра.
________________________________________
Обновление данных
1.	Добавление новых строк:
•	Вернитесь на страницу http://localhost:8080/h2-console.
•	Выполните следующий SQL-запрос для добавления двух новых строк в таблицу ПОЛЬЗОВАТЕЛИ (скопируйте скрипт запроса ниже):
sql
-- Шаг 1: Проверяем, есть ли данные в таблице
-- Если данные есть, создаем временную таблицу и копируем данные первой строки
CREATE TEMPORARY TABLE IF NOT EXISTS temp_user AS
SELECT * FROM "ПОЛЬЗОВАТЕЛИ"
WHERE "ID" = (SELECT MIN("ID") FROM "ПОЛЬЗОВАТЕЛИ")
LIMIT 1;

-- Шаг 2: Удаляем первую строку, если временная таблица не пуста
DELETE FROM "ПОЛЬЗОВАТЕЛИ"
WHERE "ID" = (SELECT "ID" FROM temp_user LIMIT 1);

-- Шаг 3: Сбрасываем последовательность для столбца ID
ALTER TABLE "ПОЛЬЗОВАТЕЛИ" ALTER COLUMN "ID" RESTART WITH 1;

-- Шаг 4: Добавляем две новые строки на основе данных из временной таблицы
-- Проверяем, что временная таблица не пуста
INSERT INTO "ПОЛЬЗОВАТЕЛИ" (
    "ИМЯ", "EMAIL", "ЦЕЛЬ", "рост (см)", "вес (кг)", "уровень активности", "ПОЛ",
    "калории на порцию", "УГЛЕВОДЫ", "ЖИРЫ", "НАЗВАНИЕ", "БЕЛКИ", "ВОЗРАСТ", "ДАТА"
)
SELECT
    "ИМЯ", "EMAIL", "ЦЕЛЬ", "рост (см)", "вес (кг)", "уровень активности", "ПОЛ",
    68, 12, 1.4, 'Овсянка', 2.4, "ВОЗРАСТ", '2025-03-01'::DATE
FROM temp_user
WHERE EXISTS (SELECT 1 FROM temp_user)
UNION ALL
SELECT
    "ИМЯ", "EMAIL", "ЦЕЛЬ", "рост (см)", "вес (кг)", "уровень активности", "ПОЛ",
    52, 14, 0.2, 'Яблоки', 0.3, "ВОЗРАСТ", '2025-03-01'::DATE
FROM temp_user
WHERE EXISTS (SELECT 1 FROM temp_user);

-- Шаг 5: Удаляем временную таблицу
DROP TABLE IF EXISTS temp_user;
•	После выполнения запроса в таблице ПОЛЬЗОВАТЕЛИ появятся две новые строки с актуальными блюдами (предыдущая тестовая строка будет удалена).
2.	Экспорт обновлённых данных:
•	Перейдите по адресу: http://localhost:8080/export/excel.
•	Обновлённая таблица ПОЛЬЗОВАТЕЛИ будет экспортирована в файл Пользователи.xlsx в корневой папке проекта.
________________________________________
Генерация отчёта
Для генерации отчёта, завершите процесс 'Run' в классе: ‘Application’ и после этого запустите функционал 'Run' в другом 'главном' файле: ReportGenerator, в том же пакете: src/main/java/org/example.

1.	Просмотр отчёта:
•	Убедитесь, что в корневой папке проекта появился текстовый файл Отчет.txt.
•	Откройте файл для просмотра. В нём содержатся:
•	Отчёт за день с суммой всех калорий и количеством приёмов пищи.
•	Проверка, уложился ли пользователь в свою дневную норму калорий.
•	История питания по дням.

Т.е. Вы должны увидеть в файле:‘Отчет.txt’ для показанного тестового запроса, примерно такой текст:

"Для пользователя: Иван Иванов, рассчитанная дневная норма калорий: 1420,00 калорий

Отчёт за день:
- Сумма всех калорий: 120.0 калорий
- Количество приёмов пищи: 2

Проверка нормы калорий:
- Пользователь уложился в дневную норму калорий.

История питания по дням:
- Дата: 2025-03-01, Приёмов пищи: 2, Калории: 120.0"


________________________________________
SELECT * FROM "БЛЮДА";, и экспортировать данные в Excel по адресу: http://localhost:8080/export/excel.
Таким образом, выбор H2 Console был сделан для обеспечения доступности, простоты взаимодействия и эффективности в рамках данного проекта.
